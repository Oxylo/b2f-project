add.rule(strategy.st,
name='ruleSignal',
arguments=list(sigcol='short', sigval=TRUE, orderside='long', ordertype='market',
orderqty='all', TxnFees=.txn.fees, replace=TRUE),
type='exit',
label='Exit2SHORT')
#apply strategy
t1 <- Sys.time()
out <- applyStrategy(strategy=strategy.st, portfolios=portfolio.st)
t2 <- Sys.time()
print(t2-t1)
#set up analytics
updatePortf(portfolio.st)
dateRange <- time(getPortfolio(portfolio.st)$summary)[-1]
updateAcct(portfolio.st, dateRange)
updateEndEq(account.st)  # compute final equity
View(mktdata)
View(getOrderBook(portfolio.st))
View(getOrderBook(portfolio.st)$forex$forex$GBPUSD)
str(getOrderBook(portfolio.st))
View(getOrderBook(portfolio.st)$luxor$luxor$GBPUSD)
attr(getOrderBook(portfolio.st))
class(getOrderBook(portfolio.st))
attr(getOrderBook(portfolio.st))
attr(getOrderBook(portfolio.st)$luxor)
getOrderBook(portfolio.st)
getOrderBook(portfolio.st)$luxor
getOrderBook(portfolio.st)$luxor$luxor
getOrderBook(portfolio.st)$luxor$luxor$GBPUSD
View(getOrderBook(portfolio.st)$luxor)
getOrderBook(portfolio.st)$luxor
getOrderBook(portfolio.st)$luxor$GBPUSD
View(getOrderBook(portfolio.st)$luxor$GBPUSD)
chart.Posn(portfolio.st)
sessionInfo()
q()
sessionInfo()
package.dependencies(xts)
package_dependencies()
install.packages("miniCRAN")
library(miniCRAN)
tags <- "quantstrat"
pkgDep(tags)
pkgDep(tags, availPkgs = cranJuly2014)
pkgDep(zoo, availPkgs = cranJuly2014)
pkgDep("xts", availPkgs = cranJuly2014)
dg <- makeDepGraph(tags, enhances=TRUE, availPkgs = cranJuly2014)
install.packages("igraph")
library(ggplot2)
library(dplyr)
library(data.table)
library("quantstrat")
pck <- c("quantstrat")
pkgDep(pck)
sessionInfo()
getPortfolio(portfolio.st)
portfolio.st
attributes(getPortfolio("luxor"))
str(getPortfolio("luxor"))
attributes(getPortfolio("luxor"))
vp <- getPortfolio("luxor")
View(vp$summary)
View(vp$symbols)
vp$symbols
attr(vp$symbols)
attr(vp$symbols, which = "posPL")
attr(vp$symbols, which = posPL)
ls.str(vo)
ls.str(vp)
ls.str(vp$GBPUSD)
vp$GBPUSD
vp$symbols$GBPUSD
str(vp$symbols$GBPUSD)
ls.str(vp$symbols$GBPUSD)
ls.str(vp)
str(vp, max.level = NA)
str(vp, max.level = 1)
str(vp, max.level = 2)
str(vp, max.level = 3)
str(vp,indent.str = "--------->")
str.ls(vp)
ls.str(vp)
vp$symbols
vp$symbols$GBPUSD
vs <- getStrategy("luxor")
vs$name
vs$assets
vs$indicators$nFast$name
vs$indicators$nFast$label
vs$indicators$nFast$call
vs$constraints
vs$init
vs$call
go <- quantstrat::get.orderbook("luxor")
go$luxor$GBPUSD
ga <- blotter::getAccount("luxor")
ga$summary
ga$Additions
ga$Withdrawals
ga$Interest
library(data.tree)
install.packages(data.tree)
install.packages("data.tree")
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
portfolio <- list(summary=1, symbols=
list(EURUSD=1, GBPUSD=list(txn=1, posPL.USD=1, posPL=1)))
tree <- FromListSimple(portfolio, nodeName = "portfolio")
tree
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
portfolio <- list(summary=1:10, symbols=
list(EURUSD=1:10, GBPUSD=list(txn=1:10, posPL.USD=1, posPL=1:10)))
tree <- FromListSimple(portfolio, nodeName = "portfolio")
print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
portfolio <- list(summary=list(), symbols=
list(EURUSD=list(), GBPUSD=list(txn=1:10, posPL.USD=1, posPL=list())))
tree <- FromListSimple(portfolio, nodeName = "portfolio")
print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
tree <- FromListSimple(portfolio, nodeName = "portfolio")
print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
tree <- FromListSimple(portfolio, nodeName = "portfolio")
print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
tree <- FromListSimple(portfolio, nodeName = "portfolio")
print(tree)
as.name("portfolio")
a = 3
as.name("a")
as.name("a") * 4
eval("a") * 4
a
a
str(a)
deparse(substitute(a))
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf(), Withdrawels=leaf(), Interest=leaf(), portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
objects <- c(account, portfolio)
for (obj in objects) {
tree <- FromListSimple(obj, nodeName = deparse(substitute(obj)))
print(tree)
}
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
objects <- c(account, portfolio)
for (obj in objects) {
tree <- FromListSimple(obj, nodeName = deparse(substitute(obj)))
print(tree)
}
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
objects <- c(account, portfolio)
for (obj in objects) {
tree <- FromListSimple(obj, nodeName = deparse(substitute(obj)))
print(tree)
}
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
objects <- c(account, portfolio)
for (obj in objects) {
tree <- FromListSimple(obj, nodeName = "X")
print(tree)
}
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
objects <- c(account, portfolio)
tree <- FromListSimple(account, nodeName = "account")
print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
for (obj in c(account, portfolio)) {
tree <- FromListSimple(account, nodeName = "account")
print(tree)}
for (obj in c(account, portfolio)) {
tree <- FromListSimple(obj, nodeName = "account")
print(tree)}
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(name=leaf, assets=leaf, signals=leaf, constraints=leaf, init=leaf, wrapup=leaf, call=leaf,
indicators=(list(nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf)), nSlow)),
arguments=list(order=leaf, enter=leaf))
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(name=leaf, assets=leaf, signals=leaf, constraints=leaf, init=leaf, wrapup=leaf, call=leaf,
indicators=list(nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf)), nSlow),
rules=list(order=leaf, enter=leaf))
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(name=leaf, assets=leaf, signals=leaf, constraints=leaf, init=leaf, wrapup=leaf, call=leaf,
indicators=list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf))),
rules=list(order=leaf, enter=leaf))
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(name=leaf, assets=leaf, signals=leaf, constraints=leaf, init=leaf, wrapup=leaf, call=leaf,
indicators=leaf,
rules=list(order=leaf, enter=leaf))
# list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf)))
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(name=leaf, assets=leaf)
# list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf)))
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(name=leaf, assets=leaf)
# list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf)))
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
sstrategy <- list(name=leaf, assets=leaf)
# list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf)))
tree <- FromListSimple(sstrategy, nodeName = "strategy"); print(tree)
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
sstrategy <- list(nname=leaf, assets=leaf)
# list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf)))
tree <- FromListSimple(sstrategy, nodeName = "strategy"); print(tree)
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(nname=leaf, assets=leaf,
list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf))))
tree <- FromListSimple(sstrategy, nodeName = "strategy"); print(tree)
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf))))
tree <- FromListSimple(sstrategy, nodeName = "strategy"); print(tree)
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf))))
tree <- FromListSimple(sstrategy, nodeName = "strategy"); print(tree)
help(list)
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf)))
tree <- FromListSimple(sstrategy, nodeName = "strategy"); print(tree)
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf))))
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf, aarguments=list(x=leaf, n=leaf))))
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf)))
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(name=leaf, label=leaf, enabled=leaf, call=leaf)))
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(nname=leaf, assets=leaf,
indicators=leaf)
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(nname=leaf, label=leaf)))
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(nname=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf))))
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
strategy <- list(nname=leaf, assets=leaf, signals=leaf, rules=list(order=leaf, enter=leaf), constraints=leaf, init=leaf, wrapup=leaf, call=leaf,
indicators=list(nSlow=leaf, nFast=list(nname=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf))))
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(nname=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf))),
signals=leaf, rules=list(order=leaf, enter=leaf), constraints=leaf, init=leaf, wrapup=leaf, call=leaf)
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
getOrders("luxor")
getOrders("luxor", symbol = "GBPUSD")
type(getOrders("luxor", symbol = "GBPUSD"))
class(getOrders("luxor", symbol = "GBPUSD"))
names(getOrders("luxor", symbol = "GBPUSD"))
# draw_objects.R
# Converts hierarchical list to graphical ascii tree
library(data.tree)
leaf <- list()
account <- list(summary=leaf, Additions=leaf, Withdrawels=leaf, Interest=leaf, portfolios=
list(portfolio1=leaf, portfolio2=leaf, luxor=leaf))
portfolio <- list(summary=leaf, symbols=
list(EURUSD=leaf, USDSGD=leaf, GBPUSD=list(txn=leaf, posPL.USD=leaf, posPL=leaf)))
strategy <- list(nname=leaf, assets=leaf,
indicators=list(nSlow=leaf, nFast=list(nname=leaf, label=leaf, enabled=leaf, call=leaf, arguments=list(x=leaf, n=leaf))),
signals=leaf, rules=list(order=leaf, enter=leaf), constraints=leaf, init=leaf, wrapup=leaf, call=leaf)
tree <- FromListSimple(account, nodeName = "account"); print(tree)
tree <- FromListSimple(portfolio, nodeName = "portfolio"); print(tree)
tree <- FromListSimple(strategy, nodeName = "strategy"); print(tree)
load("~/projects/b2f-project/release/buildstrategy.R")
getwd("/home/pieter/projects/b2f-project/release/")
setwd("/home/pieter/projects/b2f-project/release/")
require(IKTrading)
require(quantstrat)
require(PerformanceAnalytics)
source("globals.R")
source("trutils.R")
source("utils.R")
source("buildstrategy.R")
df <- load.fxdata(cpair)
ts <- df2xts(df)
ts <- select.interval(ts, from, to)
to
select.interval <- function(xts, from, to) {
#' Select records within given time interval
#'
#' @description None
#'
#' @param xts timeseries. Timeseries with timestamp as index.
#' @param from string. Startdate with format YYYY-MM-DD .
#' @param to string. Enddate with format YYYY-MM-DD .
#'
#' @return xts. Timeseries with timestamp as index.
#'
#' @examples
#' select.interval(df)
interval <- paste(from, "::", to, sep="")
xts <- xts[interval]
return(xts)
}
ts <- downsample(ts, frequency)
do.call("<-",list(cpair, ts))  # See: http://stackoverflow.com/questions/18308092/r-blotter-error-in-getsymbol-pos-env-object-not-found
rm(list=ls(.blotter), envir=.blotter)
Sys.setenv(TZ="UTC")            # --> attaches correct time zone to Dates in index
init.currencypair(pair = cpair)
init.currencypair(cpair)
strat.name <- "luxor"
init.currencypair(cpair)
strategy.st <- portfolio.st <- account.st <- strat.name
rm.strat(strategy.st)           # --> necessary for rerunning the strategy.
initDate=shift.strdate(from, days = -1)
quote <- get.quote(cpair)
initPortf(portfolio.st, symbols=symbols, initDate=initDate, currency=quote)
symbols
initPortf(portfolio.st, symbols=cpair, initDate=initDate, currency=quote)
initAcct(account.st, portfolios=portfolio.st, initDate=initDate, currency=quote, initEq=initEq)  # returns are computed from initEq
initOrders(portfolio.st, symbol=cpair, initDate=initDate)
strategy(strategy.st, store=TRUE)  # this is where we put all our indicators, signals, and rules.
buildstrategy()
t1 <- Sys.time()
out <- applyStrategy(strategy=strategy.st, portfolios=portfolio.st)
ts <- select.interval(ts, from, to)
ts <- downsample(ts, frequency)
do.call("<-",list(cpair, ts))  # See: http://stackoverflow.com/questions/18308092/r-blotter-error-in-getsymbol-pos-env-object-not-found
out <- applyStrategy(strategy=strategy.st, portfolios=portfolio.st)
updatePortf(portfolio.st)
dateRange <- time(getPortfolio(portfolio.st)$summary)[-1]
updateAcct(portfolio.st, dateRange)
updateEndEq(account.st)  # compute final equity
ts <- tradeStats(Portfolios = "luxor", Symbols = symbol)
ts <- tradeStats(Portfolios = "luxor", Symbols = cpair)
ts.per.trade <- perTradeStats(Portfolio = "luxor", Symbol = cpair)
chart.Posn(Portfolio = "luxor", Symbol = cpair)
